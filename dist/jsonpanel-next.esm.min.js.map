{"version":3,"file":"jsonpanel-next.esm.min.js","sources":["../src/util.js","../src/pair.js","../src/panel.js","../node_modules/style-inject/dist/style-inject.es.js","../src/main.js"],"sourcesContent":["function isPlainObject(object) {\n  return Object.prototype.toString.call(object) === '[object Object]';\n}\n\nfunction objectHasProperty(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n}\n\nfunction simpleClone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nfunction getObjectWithDefaults(object, defaultObject) {\n  const newObject = simpleClone(defaultObject);\n  return Object.assign(newObject, object);\n}\n\nfunction prettyPrintObject(object, spaces = 2) {\n  return JSON.stringify(object, null, spaces);\n}\n\nexport {\n  isPlainObject,\n  objectHasProperty,\n  getObjectWithDefaults,\n  prettyPrintObject,\n};\n","import {isPlainObject} from './util.js';\nimport Panel from './panel.js';\n\nclass Pair {\n  constructor(key, value, valueTransformer) {\n    this.key = key;\n    this.value = value;\n    this.valueTransformer = valueTransformer;\n  }\n\n  static create(key, value, valueTransformer) {\n    if (isPlainObject(value) || Array.isArray(value)) {\n      return new ExpandablePair(key, value, valueTransformer);\n    }\n\n    return new SimplePair(key, value, valueTransformer);\n  }\n\n  getKeyMarkup() {\n    return `<span class=\"key\">${this.key}</span>`;\n  }\n\n  get valueType() {\n    return typeof this.value;\n  }\n\n  getValueInnerMarkup() {\n    return JSON.stringify(this.value);\n  }\n\n  createTagInnerMarkup() {\n    return `${this.getKeyMarkup()}: <span class=\"value ${\n      this.valueType\n    }\">${this.getValueInnerMarkup()}</span>`;\n  }\n\n  get class() {\n    return 'pair';\n  }\n\n  createTag() {\n    const li = document.createElement('li');\n    li.className = this.class;\n    li.innerHTML = this.createTagInnerMarkup();\n    return li;\n  }\n\n  render() {\n    this.el = this.createTag();\n  }\n}\n\nclass SimplePair extends Pair {\n  get class() {\n    return `${super.class} simple`;\n  }\n\n  getValueInnerMarkup() {\n    if (this.valueTransformer instanceof Function) {\n      return this.valueTransformer(super.getValueInnerMarkup());\n    }\n\n    return super.getValueInnerMarkup();\n  }\n}\n\nclass ExpandablePair extends Pair {\n  get valueType() {\n    return Array.isArray(this.value) ? 'array' : 'object';\n  }\n\n  get class() {\n    return `${super.class} expandable`;\n  }\n\n  getValueInnerMarkup() {\n    const valueString = super.getValueInnerMarkup();\n    // Truncate the array / object preview using value-inner class.\n    // eg. { key: \"value\" } -> {<span class=\"value-inner\">key: \"value\"</span>}\n    const valueMatch = valueString.match(/^([{[])(.*)([}\\]])$/);\n    return `${valueMatch[1]}<span class=\"value-inner\">${valueMatch[2]}</span>${valueMatch[3]}`;\n  }\n\n  createTagInnerMarkup() {\n    return `<a class=\"expander\" href=\"#\">${super.createTagInnerMarkup()}</a>`;\n  }\n\n  render() {\n    super.render();\n    this.el\n      .querySelector('.expander')\n      .addEventListener('click', (evt) => this.onKeyClick(evt));\n  }\n\n  get expanded() {\n    return this.el.classList.contains('expanded');\n  }\n\n  expand() {\n    // Open new panel\n    Panel.renderToEl(this.el, {\n      data: this.value,\n      valueTransformer: this.valueTransformer,\n    });\n    this.el.classList.add('expanded');\n  }\n\n  collapse() {\n    for (const element of this.el.querySelectorAll('.panel')) element.remove();\n    this.el.classList.remove('expanded');\n  }\n\n  onKeyClick(evt) {\n    if (this.expanded) {\n      this.collapse();\n    } else {\n      this.expand();\n    }\n\n    evt.stopPropagation();\n    evt.preventDefault();\n  }\n}\n\nexport default Pair.create;\n","import createPair from './pair.js';\n\nexport default class Panel {\n  constructor(options) {\n    this.options = options;\n  }\n\n  get selector() {\n    return this.options.selector;\n  }\n\n  get data() {\n    return this.options.data;\n  }\n\n  get valueTransformer() {\n    return this.options.valueTransformer;\n  }\n\n  isArray() {\n    return Array.isArray(this.data);\n  }\n\n  createListTag() {\n    if (this.isArray()) {\n      const ol = document.createElement('ol');\n      ol.className = 'list';\n      ol.start = 0;\n      return ol;\n    }\n\n    const ul = document.createElement('ul');\n    ul.className = 'list';\n    return ul;\n  }\n\n  createListItem(key, value) {\n    const pair = createPair(key, value, this.valueTransformer);\n    pair.render();\n    return pair.el;\n  }\n\n  render() {\n    const list = this.createListTag();\n    for (const [key, value] of Object.entries(this.data)) {\n      list.append(this.createListItem(key, value));\n    }\n\n    const listWrap = document.createElement('div');\n    listWrap.className = 'panel';\n    listWrap.append(list);\n    this.el = listWrap;\n    return this;\n  }\n\n  static renderToEl(container, options) {\n    const panel = new Panel(options);\n    panel.render();\n\n    container.append(panel.el);\n    return panel;\n  }\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import Panel from './panel.js';\nimport {getObjectWithDefaults} from './util.js';\nimport './styles/jsonpanel-next.scss';\n\nconst defaultOptions = {\n  selector: '#jsonpanel',\n  data: {},\n};\n\nexport default function jsonpanelNext(options) {\n  options = getObjectWithDefaults(options, defaultOptions);\n  return Panel.renderToEl(\n    window.document.querySelector(options.selector),\n    options,\n  );\n}\n"],"names":["getObjectWithDefaults","object","defaultObject","newObject","JSON","parse","stringify","simpleClone","Object","assign","Pair","constructor","key","value","valueTransformer","this","static","prototype","toString","call","Array","isArray","ExpandablePair","SimplePair","getKeyMarkup","valueType","getValueInnerMarkup","createTagInnerMarkup","class","createTag","li","document","createElement","className","innerHTML","render","el","super","Function","valueMatch","match","querySelector","addEventListener","evt","onKeyClick","expanded","classList","contains","expand","Panel","renderToEl","data","add","collapse","element","querySelectorAll","remove","stopPropagation","preventDefault","createPair","create","options","selector","createListTag","ol","start","ul","createListItem","pair","list","entries","append","listWrap","container","panel","css","ref","insertAt","head","getElementsByTagName","style","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","defaultOptions","jsonpanelNext","window"],"mappings":"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"}